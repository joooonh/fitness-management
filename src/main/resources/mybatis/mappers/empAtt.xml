<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmployeeAttMapper">
	
	<select id="insertEmpAttList" parameterType="EmployeeAttendance">
		insert into employee_program_attendances
			(employee_id, program_no, program_attendance_date)
		values
			(#{empId} , #{progNo}, #{progAttDate})

	</select>
	
	
	<select id="getEmpList" parameterType="map" resultType="EmployeeAttDto">
		select
		    employee_id                 as id,
		    employee_name               as name,
		    employee_email              as email,
		    employee_tel                as tel,
		    employee_photo              as photo,
		    employee_zipcode            as zipcode,
		    employee_basic_address      as basicAddress,
		    employee_detail_address     as detailAddress,
		    employee_employment_status  as empStatus,
            program_no                  as progNo,
            program_attendance_date     as progAttDate,
		    program_name                as progName
	from (
	
			        select
			            row_number() over(order by A.employee_name desc)row_numbers,
			            A.employee_id,
			            A.employee_name,
			            A.employee_email,
			            A.employee_tel,
			            A.employee_photo,
			            A.employee_zipcode,
			            A.employee_basic_address,
			            A.employee_detail_address,
			            A.employee_employment_status,
                        B.program_no,
                        B.program_attendance_date,
                        C.program_name
                      
			            
			           
			            from
			                employees A ,  employee_program_attendances B, fitness_programs C 
			            where
			                A.employee_id = B.employee_id
			                and B.program_no = C.program_no
                            and A.employee_id = C.employee_id
			               
			              
	            )
	    where row_numbers between #{begin} and #{end}
        and employee_employment_status = '재직'
        and program_attendance_date is not null
      
        	<if test="opt != null and keyword !=null">
        		<choose>
   					<when test="opt == 'empName'">
   						and employee_name = #{keyword}
   					</when>
   					<when test="opt == 'id'">
   						and employee_id = #{keyword}
   					</when>
   					<when test="opt == 'tel'">
   						and employee_tel = #{keyword}
   					</when>
        		</choose>
        	</if>
    
        
	</select>

	<select id="getTotalRows" parameterType="map" resultType="int">
		select
			count(*)
		from 
			employees a
		<where>
			<if test="opt != null and keyword !=null">
        		<choose>
   					<when test="opt == 'empName'">
   						 a.employee_name = #{keyword}
   					</when>
   					<when test="opt == 'id'">
   						and a.employee_id = #{keyword}
   					</when>
   					<when test="opt == 'tel'">
   						and a.employee_tel = #{keyword}
   					</when>
        		</choose>
        	</if>
		</where>
			
			
	</select>
	
	<!-- 프로그램 조회  -->
	<select id="getPrograms" parameterType="map" resultType="FitnessProgram">
		select
			program_no						as no,
			program_name					as name,
			program_start_date				as startDate,
			program_end_date				as endDate,
			program_start_hour				as startHour,
			program_end_hour				as endHour,
			program_quota					as quota,
			program_request_count			as requestCount,
			program_status					as status,
			program_created_date			as createdDate,
			program_updated_date 			as udpatedDate,
			employee_id						as employeeId,
			fitness_program_category_no	    as programCategoryNo
		from
			fitness_programs
	</select>
	
	<!-- 직원 이름 조회하기 -->
	<select id="getEmpId" parameterType="map" resultType="Employee">
		select
			employee_id as id
		from 
			employees
	</select>
	
	<select id="getEmpById" parameterType="map" resultType="EmployeeAttDto">
		select
			A.employee_id 			as id,
            A.employee_tel 			as tel,
            A.employee_name 		as name,
            B.program_no 			as progNo,
            B.program_name 			as progName,
            B.program_start_date 	as startDate,
            B.program_end_date 		as endDate,
            B.program_start_hour 	as startHour,
            B.program_end_hour  	as endHour
            
            
		from 
			employees A, fitness_programs B
        where 
        A.employee_id = B.employee_id
        and A.employee_id = #{value}
			
	</select>
	
</mapper>