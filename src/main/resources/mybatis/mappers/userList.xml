<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.UserListMapper">

	<!-- 검색조건에 해당하는 회원목록 전체 행 개수 조회 -->
	<select id="getUserListTotalRows" parameterType="map" resultType="int">
	select
	    count(A.userNo) as cnt
	from
	    (select 
	        U.user_no as userNo, count(*)
	     from 
	        users U, fitness_programs P, class_registration_histories C
	     where
	        U.user_deleted = 'N'
	        and U.user_no = C.user_no(+) 
	        and P.program_no(+) = C.program_no
	        <if test="programNo != null">
    			and C.program_no = #{programNo}
    		</if>
    		<if test="keyword != null">
    			and (U.user_no like '%' || #{keyword} || '%'
    			or U.user_name like '%' || #{keyword} || '%'
    			or U.user_gender like '%' || #{keyword} || '%'
    			or U.user_birthday like '%' || #{keyword} || '%'
    			or U.user_tel like '%' || #{keyword} || '%'
    			or P.program_name like '%' || #{keyword} || '%')
    		</if>
	     group by 
	        U.user_no ) A
	</select>
	
	<!-- 전체 회원 목록 조회 -->
	<resultMap type="UserListDto" id="UserListResultMap">
		<id column="no" property="no"/>
		<result column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="gender" property="gender"/>
		<result column="birth" property="birth"/>
		<result column="tel" property="tel"/>
		
		<collection property="programs" ofType="FitnessProgram">
    		<id column="progNo" property="no"/>
    		<result column="progName" property="name"/>
  		</collection>
	</resultMap>
	<select id="getUserListDto" parameterType="map" resultMap="UserListResultMap">
		select
			*
		from (
				select
					<choose>
						<when test="sort == 'no'">row_number() over (order by U.user_no asc) row_numbers,</when>
						<when test="sort == 'date'">row_number() over (order by U.user_created_date desc) row_numbers,</when>
						<when test="sort == 'name'">row_number() over (order by U.user_name asc) row_numbers,</when>
						<otherwise>row_number() over (order by U.user_no asc) row_numbers,</otherwise>
					</choose>
					U.user_id			as id,
				    U.user_no           as no,
				    U.user_name         as name,
				    U.user_gender       as gender,
				    U.user_birthday     as birth,
				    U.user_tel          as tel,
				    P.program_no      	as progNo,
				    P.program_name      as progName
				 from
				 	users U, fitness_programs P, class_registration_histories C
				 where
				 	U.user_deleted = 'N'
				 	and U.user_no = C.user_no(+) 
		    		and P.program_no(+) = C.program_no
		    		<if test="programNo != null">
		    			and C.program_no = #{programNo}
		    		</if>
		    		<if test="keyword != null">
		    			and (U.user_no like '%' || #{keyword} || '%'
		    			or U.user_name like '%' || #{keyword} || '%'
		    			or U.user_gender like '%' || #{keyword} || '%'
		    			or U.user_birthday like '%' || #{keyword} || '%'
		    			or U.user_tel like '%' || #{keyword} || '%'
		    			or P.program_name like '%' || #{keyword} || '%')
		    		</if>
			)
		where
		    row_numbers between #{begin} and #{end}
	</select>
	
	<!-- 회원별 신청한 프로그램명 조회 -->
	<select id="getProgramNameByUserNo" parameterType="int" resultType="ClassRegHistoryDto">
		select
		    A.class_registration_no         as classRegNo,
		    B.program_name                  as programName,
		    A.program_no					as programNo
		from
		    class_registration_histories A, fitness_programs B
		where
		    A.user_no = #{value}
		    and A.program_no = B.program_no
	</select>
	
</mapper>