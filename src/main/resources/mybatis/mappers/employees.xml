<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.EmployeeMapper">

	<!-- 직원정보 수정 -->
	<update id="updateEmployee" parameterType="Employee">
		update 
			employees
		set
			employee_name = #{name},
			<if test="password != null">
			employee_password = #{password},
			</if>
			employee_tel = #{tel},
			<if test="photo != null">
			employee_photo = #{photo},
			</if>
			employee_zipcode = #{zipcode},
			employee_basic_address = #{basicAddress},
			employee_detail_address = #{detailAddress},
			employee_employment_status = #{status},
			employee_updated_date = sysdate,
			fitness_no = #{fitnessNo}
		where
			employee_id	= #{id}
	</update>
	
	<!-- 모든 직원 정보 -->
	<select id="getAllEmployee" parameterType="map" resultType="Employee">
		select
			*
		from(
			select
				row_number() over(order by employee_name desc) 	as row_numbers,
				employee_id						as id,
				employee_name					as name,
				employee_password				as password,
				employee_email					as email,
				employee_tel					as tel,
				employee_photo					as photo,
				employee_zipcode				as zipcode,
				employee_basic_address			as basicAddress,
				employee_detail_address			as detailAddress,
				employee_employment_status		as status,
				employee_created_date			as createdDate,
				employee_updated_date			as updatedDate,
				fitness_no						as fitnessNo
			from
				employees	
			<where>
				<choose>
					<when test="status == '재직'">
						employee_employment_status = '재직'
					</when>
					<when test="status == '휴직'">
						employee_employment_status = '휴직'
					</when>
					<when test="status == '퇴직'">
						employee_employment_status = '퇴직'
					</when>
				</choose>
				<if test="keyword != null">
					and (employee_id like '%' || #{keyword} || '%'
					or employee_name like '%' || #{keyword} || '%'
					or employee_tel like '%' || #{keyword} || '%'
					or employee_email like '%' || #{keyword} || '%'
					or employee_employment_status like '%' || #{keyword} || '%')
				</if>
			</where>
			)
		where
			row_numbers between #{begin} and #{end}
	</select>
	
	<!-- 직원 아이디에 해당하는 직원 정보 -->
	<select id="getEmployeeById" parameterType="string" resultType="Employee">
		select
			employee_id						as id,
			employee_name					as name,
			employee_password				as password,
			employee_email					as email,
			employee_tel					as tel,
			employee_photo					as photo,
			employee_zipcode				as zipcode,
			employee_basic_address			as basicAddress,
			employee_detail_address			as detailAddress,
			employee_employment_status		as status,
			employee_created_date			as createdDate,
			employee_updated_date			as updatedDate,
			fitness_no						as fitnessNo
		from
			employees	
		where
			employee_id	= #{value}
	</select>
	
	<!-- 직원 상세정보 -->
	<select id="getEmployeeDetail" parameterType="string" resultType="EmployeeDetail">
		select
			E.employee_id					as id,
			E.employee_name					as name,
			E.employee_password				as password,
			E.employee_email				as email,
			E.employee_tel					as tel,
			E.employee_photo				as photo,
			E.employee_zipcode				as zipcode,
			E.employee_basic_address		as basicAddress,
			E.employee_detail_address		as detailAddress,
			E.employee_employment_status	as status,
			E.employee_created_date			as createdDate,
			E.employee_updated_date			as updatedDate,
			E.fitness_no					as fitnessNo,
            R.employee_role_name
		from
			employees E, employee_roles R
		where
            E.employee_id = R.employee_id
            and E.employee_id = #{value}
	</select>
	
	<!-- 재직중인 직원 정보 -->
	<select id="getEmployeeByStatus" resultType="Employee">
		select
			employee_id				as id,
			employee_name			as name,
			employee_tel			as tel,
			employee_basic_address	as basicAddress
		from
			employees
		where
			employee_employment_status = '재직'
	</select>
	
	<!-- 직원이름으로 검색한 직원 정보 -->
	<select id="getSearchEmployees" parameterType="string" resultType="Employee">
		select
			employee_id				as id,
			employee_name			as name,
			employee_tel			as tel,
			employee_basic_address	as basicAddress
		from
			employees
		where
			employee_employment_status = '재직'
			and employee_name like '%' || #{value} || '%'
	</select>
	
	<!-- 총 직원 목록 갯수 -->
	<select id="getTotalRowsBySearchCondition" parameterType="map" resultType="int">
		select
			count(*)
		from
			employees
		<where>
			<choose>
				<when test="status == '재직'">
					employee_employment_status = '재직'
				</when>
				<when test="status == '휴직'">
					employee_employment_status = '휴직'
				</when>
				<when test="status == '퇴직'">
					employee_employment_status = '퇴직'
				</when>
			</choose>
				<if test="keyword != null">
					and (employee_id like '%' || #{keyword} || '%'
					or employee_name like '%' || #{keyword} || '%'
					or employee_tel like '%' || #{keyword} || '%'
					or employee_email like '%' || #{keyword} || '%'
					or employee_employment_status like '%' || #{keyword} || '%')
				</if>
		</where>
	</select>

</mapper>