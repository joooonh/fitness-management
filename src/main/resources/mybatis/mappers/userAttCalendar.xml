<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UserAttCalendarMapper">

	<!-- 출석 목록 조회 -->
	<select id="getUserList" parameterType="map" resultType="UserListAttDto">
	select 
	    user_no as userNo,
	    user_id as userId,
	    user_name as userName,
	    user_gender as userGender,
	    program_no as programNo,
	    program_name as programName,
	    membership_payment_status as membership
	from (
	        select 
	            row_number() over (order by user_no desc) row_numbers,
	            user_no,
	            user_id,
	            user_name,
	            user_gender,
	            program_no,
	            program_name,
	            membership_payment_status
	        from (
	                select 
	                    A.user_no,
	                    A.user_id,
	                    A.user_name,
	                    A.user_gender,
	                    D.program_no,
	                    D.program_name,
	                    null membership_payment_status
	                from 
	                    users A, fitness_programs D , class_registration_histories K
	                where
	                    K.program_no = D.program_no
	                    and A.user_no = K.user_no
	                    and K.class_payment_status = 'Y'
	                    and D.program_start_date &lt;= #{endDate} and D.program_end_date >= #{startDate}
	                   <if test="opt != null and keyword != null">
	                        <choose>
	                            <when test="opt == 'userName' ">
	                                and user_name = #{keyword}
	                            </when>
	                            <when test="opt == 'userNo' ">
	                                and user_no = #{keyword}
	                            </when>
	                            <when test="opt == 'userTel'">
	                                and user_tel =  #{keyword}
	                            </when>
	                         </choose> 
	                    </if>
	                    <if test="programInfo != null">
	                        and D.program_no= #{programInfo}
	                    </if>  
	                    and exists (select 1
	                                from user_class_attendances X
	                                where X.user_no = A.user_no )
	                union
	                select 
	                    A.user_no,
	                    A.user_id,
	                    A.user_name,
	                    A.user_gender,
	                    null program_no,
	                    null program_name,
	                    E.membership_payment_status
	                from 
	                    users A, membership_histories E
	                where
	                    A.user_no = E.user_no
	                    and E.membership_payment_status = 'Y'
	                    and E.membership_start_date &lt;= #{endDate} and E.membership_end_date >=  #{startDate}
	                 <if test="opt != null and keyword != null">
	                        <choose>
	                            <when test="opt == 'userName' ">
	                                and user_name = #{keyword}
	                            </when>
	                            <when test="opt == 'userNo' ">
	                                and user_no = #{keyword}
	                            </when>
	                            <when test="opt == 'userTel'">
	                                and user_tel =  #{keyword}
	                            </when>
	                         </choose> 
	                    </if>
	                    and exists (select 1
	                                from user_attendances X
	                                where X.user_no = A.user_no)
	        )
	)
	where
	    row_numbers between #{begin} and #{end}


	</select>
	
	<select id="getAttEvents" parameterType="map" resultType="com.example.dto.AttEvent">
		select 
		    A.user_no 					as "userListAttDto.userNo", 
		    A.user_id 					as "userListAttDto.userId", 
		    A.user_name 				as "userListAttDto.userName", 
		    A.user_gender 				as "userListAttDto.userGender", 
		    A.user_email 				as "userListAttDto.userEmail", 
		    A.user_tel					as "userListAttDto.userTel", 
		    B.user_start_time 			as "userListAttDto.StartTime", 
		    B.user_end_time 			as "userListAttDto.EndTime", 
		    B.user_attendance_date 		as "userListAttDto.userAttDate", 
		    G.membership_payment_status as "userListAttDto.membership", 
		    null 						as "userListAttDto.classAttDate", 
		    null 						as "userListAttDto.programNo", 
		    null 						as "userListAttDto.programName", 
		    B.user_attendance_no 		as "userListAttDto.userSeq", 
		    null 						as "userListAttDto.classSeq" 
		    
		from 
			users A, user_attendances B ,fitness_programs E ,membership_histories G
		
		where A.user_no = B.user_no 
		and A.user_no = G.user_no
		and A.user_no = #{userNo} 
		
		and B.user_attendance_date between #{startDate} and #{endDate} 
		union 
		select 
		    A.user_no 					as "userListAttDto.userNo", 
		    A.user_id 					as "userListAttDto.userId", 
		    A.user_name 				as "userListAttDto.userName", 
		    A.user_gender 				as "userListAttDto.userGender", 
		    A.user_email 				as "userListAttDto.userEmail", 
		    A.user_tel 					as "userListAttDto.userTel", 
		    null 						as "userListAttDto.StartTime", 
		    null 						as "userListAttDto.EndTime", 
		    null	 					as "userListAttDto.userAttDate",
		    null 						as "userListAttDto.memberShip", 
		    C.class_attendance_date 	as "userListAttDto.classAttDate", 
		    C.program_no 				as "userListAttDto.programNo", 
		    E.program_name 				as "userListAttDto.programName", 
		    null 						as "userListAttDto.userSeq", 
		    C.user_class_attendance_no  as "userListAttDto.classSeq" 
		
		from 
			users A, user_class_attendances C ,fitness_programs E 
		
		where A.user_no = C.user_no 
		and C.program_no = E.program_no(+) 
		and A.user_no = #{userNo} 
		and C.class_attendance_date between #{startDate} and #{endDate}	
	</select>
	
	
	<!-- 페이징처리 -->
	<select id="getTotalRows" parameterType="map" resultType="int">
		select count(*)
		from 
		(select 
	                    A.user_no,
	                    A.user_id,
	                    A.user_name,
	                    A.user_gender,
	                    D.program_no,
	                    D.program_name,
	                    null membership_payment_status
	                from 
	                    users A, fitness_programs D , class_registration_histories K
	                where
	                    K.program_no = D.program_no
	                    and A.user_no = K.user_no
	                    and K.class_payment_status = 'Y'
	                    and D.program_start_date &lt;= #{endDate} and D.program_end_date >= #{startDate}
	                   <if test="opt != null and keyword != null">
	                        <choose>
	                            <when test="opt == 'userName' ">
	                                and user_name = #{keyword}
	                            </when>
	                            <when test="opt == 'userNo' ">
	                                and user_no = #{keyword}
	                            </when>
	                            <when test="opt == 'userTel'">
	                                and user_tel =  #{keyword}
	                            </when>
	                         </choose> 
	                    </if>
	                    <if test="programInfo != null">
	                        and D.program_no= #{programInfo}
	                    </if>  
	                    and exists (select 1
	                                from user_class_attendances X
	                                where X.user_no = A.user_no )
	                union
	                select 
	                    A.user_no,
	                    A.user_id,
	                    A.user_name,
	                    A.user_gender,
	                    null program_no,
	                    null program_name,
	                    E.membership_payment_status
	                from 
	                    users A, membership_histories E
	                where
	                    A.user_no = E.user_no
	                    and E.membership_payment_status = 'Y'
	                    and E.membership_start_date &lt;= #{endDate} and E.membership_end_date >=  #{startDate}
	                 <if test="opt != null and keyword != null">
	                        <choose>
	                            <when test="opt == 'userName' ">
	                                and user_name = #{keyword}
	                            </when>
	                            <when test="opt == 'userNo' ">
	                                and user_no = #{keyword}
	                            </when>
	                            <when test="opt == 'userTel'">
	                                and user_tel =  #{keyword}
	                            </when>
	                         </choose> 
	                    </if>
	                    and exists (select 1
	                                from user_attendances X
	                                where X.user_no = A.user_no))
	</select>
	
	<select id="getUserById" parameterType="map" resultType="UserListAttDto">
		select 
		        user_no 				    as userNo,
		        user_id 				    as userId,
		        user_name			    	as userName,
		        user_gender					as userGender,
		        user_email					as userEmail,
		        user_tel				    as userTel,
		        program_no					as programNo,
		        class_payment_status        as classStatus,
		        program_name				as programName,
		        membership_payment_status	as membership
		        
		from (
		        select
		            A.user_no,
		            A.user_id,
		            A.user_name,
		            A.user_gender,
		            A.user_email,
		            A.user_tel,
		            D.program_no,
		            D.program_name,
		            K.class_payment_status,
		            null membership_payment_status
		        from 
		            users A, fitness_programs D , class_registration_histories K
		            WHERE 
		                A.user_no = #{userNo}
		                and A.user_no = K.user_no
		                and D.program_no = K.program_no
		                and K.class_payment_status = 'Y'
		                and D.program_start_date &lt;= #{endDate} and D.program_end_date >= #{startDate}
		                  <if test="membership != null">
		                    and 1 != 1
		                  </if>
		               <if test="programNo != null">
		                    and D.program_no = #{programNo}
		                </if>
		        union
		        select
		            A.user_no,
		            A.user_id,
		            A.user_name,
		            A.user_gender,
		            A.user_email,
		            A.user_tel,
		            null program_no,
		            null program_name,
		            null class_payment_status,
		            nvl2((select distinct 1 
		                  from membership_histories X
		                  where X.user_no = user_no
		                  and X.membership_payment_status = 'Y'
		                  and X.membership_start_date &lt;= #{endDate} and X.membership_end_date >= #{startDate}), '회원권', 'N') as membership_payment_status
		        from 
		            users A,  membership_histories E
		            WHERE 
		                A.user_no = #{userNo}
		                and A.user_no = E.user_no
		                and E.membership_payment_status = 'Y'
		               and E.membership_start_date &lt;= #{endDate} and E.membership_end_date >=  #{startDate}
		               <if test="programNo != null">
		                    and 1 != 1
		                </if>
		)
	</select>
	
	<!--프로그램 카테고리 조회 -->
	<select id="getPrograms" parameterType="map" resultType="FitnessProgramCategory">
		select
			program_no as categoryNo,
			program_name as categoryName
		from
			fitness_programs
	</select>
</mapper>